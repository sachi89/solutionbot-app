{"version":3,"sources":["components/bot.js","components/Navigation.js","components/DelayInput.js","components/BotBubble.js","components/Loading.js","components/Delay.js","components/UserBubble.js","components/Chatbox.js","components/About.js","components/App.js","index.js"],"names":["bot","id","response","Navigation","Navbar","expand","Brand","href","src","alt","width","Toggle","aria-controls","Collapse","Nav","className","Link","to","DelayInput","props","state","hidden","setTimeout","setState","this","children","React","Component","replystyle","padding","BotBubble","style","color","size","Loading","dot1","dot2","Delay","UserBubble","i","Chatbox","handleChange","e","user","target","value","handleClick","preventDefault","length","replies","window","location","reload","autoScroll","bottomResponse","scrollIntoView","behavior","ref","el","Form","onSubmit","FormControl","component","onClick","type","Control","placeholder","onChange","About","App","callBackendAPI","a","fetch","json","body","status","Error","message","data","then","res","catch","err","console","log","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.84f42af9.chunk.js","sourcesContent":["export const bot = [\n    {id: 0, response: \", it's nice to meet you. So, what problem brings you here today?\"},\n    {id: 1, response: \"Okay, and how would you define your problem?\"},\n    {id: 2, response: \"How often does this problem occur?\"},\n    {id: 3, response: \"How long has this problem been occurring?\"},\n    {id: 4, response: \"What happens when this problem occurs? What is said or done and by whom?\"},\n    {id: 5, response: \"What happens after?\"},\n    {id: 6, response: \"How have you coped or dealt with the problem so far?\"},\n    {id: 7, response: \"Thank you for sharing with me. Next, I want to help you see solutions to your problem. Keep in mind that the solution may not resolve the problem entirely, and that's okay, because some improvement is better than no improvement or the problem getting worse. Solutions can also be a skill that you already have or something that has worked in the past. How have you already tried to address this problem?\"},\n    {id: 8, response: \"What has worked even a little?\"},\n    {id: 9, response: \"What changes have happened since you tried to address this problem? Did it get better or worse?\"},\n    {id: 10, response: \"When is the problem not occurring or not affecting you as much?\"},\n    {id: 11, response: \"Is there something that makes the problem better sometimes?\"},\n    {id: 12, response: \"What are you doing that is different?\"},\n    {id: 13, response: \"Is this something you can try doing more of or keep doing?\"},\n    {id: 14, response: \"Now tell me about a time when the problem did not occur at all. What was different about that time and what were you doing that was different?\"},\n    {id: 15, response: \"Is this something you can try doing again?\"},\n    {id: 16, response: \"On a scale from 0–10, with 10 being the best in terms of the problem, and 0 being how you felt when the problem was at its worst, where would you place yourself on the scale right now?\"},\n    {id: 17, response: \"10 may not be a realistic goal at the moment, so what number will be an acceptable goal for you?\"},\n    {id: 18, response: \"How will you know when you are one point further up the scale?\"},\n    {id: 19, response: \"What other differences will there be when you are one point further up?\"},\n    {id: 20, response: \"Who else will notice this?\"},\n    {id: 21, response: \"How do you keep from being at a lower number?\"},\n    {id: 22, response: \"How have you managed to keep things from getting worse?\"},\n    {id: 23, response: \"What else helps?\"},\n    {id: 24, response: \"Now, I'm going to ask you a question that requires some imagination. Suppose you go to sleep tonight and while you are asleep a miracle happens and the problem that brought you here is solved. But you were asleep and don’t know that it has been solved. How will you discover that this miracle happened? What will be the first signs you notice are different that will tell you that this miracle has happened and that the problem has been solved?\"},\n    {id: 25, response: \"Who else will notice?\"},\n    {id: 26, response: \"What will they notice about you or you doing differently when this happens?\"},\n    {id: 27, response: \"What will it be like when the problem is solved? What will be different?\"},\n    {id: 28, response: \"What will you be doing instead?\"},\n    {id: 29, response: \"What difference will it make?\"},\n    {id: 30, response: \"The miracle question helps you see what you would rather be doing instead of dealing with the problem. This is the future you prefer and are working towards. During this session, you did a great job identifying some potential solutions as well as some strengths and coping skills that you already have, some that have already worked in the past and can be used again. You already have the skills you need to bring positive change to your life, now its time for you to apply these solutions to get to your preferred future. If you are not seeing any progress and would like to find other solutions, or have another problem you would like to find a solution for, feel free to chat with me again!\"}\n];\n","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\n\n//component for navigation bar\nfunction Navigation() {\n  return (\n    <div>\n        <div>\n            <Navbar expand=\"lg\"> {/* navbar and nav from react-bootstrap */}\n            {/* SolutionBot logo and link to homepage */}\n            <Navbar.Brand href=\"/\"><img src=\"/images/logo.png\" alt=\"logo\" width=\"350\" /></Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n              <Navbar.Collapse id=\"basic-navbar-nav\">\n              <Nav className=\"navigation\">\n              {/*Link component from react-router-dom used to route to different components*/}\n                {/* links to Chatbox component */}\n                <Nav.Link> <Link to={\"/\"}><img src=\"/images/chat.png\" alt=\"chat\" width=\"72\" className=\"grow\" /></Link></Nav.Link>\n                {/* links to About component */}\n                <Nav.Link> <Link to={\"/About\"}><img src=\"/images/about.png\" alt=\"about\" width=\"94\" className=\"grow\" /></Link></Nav.Link>\n              </Nav>\n            </Navbar.Collapse>\n          </Navbar>\n          </div>\n    </div>\n  );\n}\n\nexport default Navigation;\n","import React from 'react';\n\n//Delay component for input options\nclass DelayInput extends React.Component\n{ //when using state in React, need to set up constructor\n    constructor(props) { // used to initialize local state. Not needed if state not being used.\n        super(props); // needs to be called or else this.props will be undefined\n        //initializing objects with their initial state\n        this.state = { //assigns objects to this.state\n                      hidden : true //set initial state of hidden to true\n                    };\n    }\n\n    componentDidMount() {\n       setTimeout(() => { // setTimeoutimeout function used to create delay\n           this.setState({hidden: false}); //update state of hidden to false\n       }, 1500); //timeout set at 1500\n   }\n\n   //if hidden is true renders ' ', if hidden is false renders children\n   render() {\n       return this.state.hidden ? '' : this.props.children;\n   }\n}\n\nexport default DelayInput;\n","import React from 'react';\nimport '../styles/TextBubble.css';\nimport { SiProbot } from 'react-icons/si';\n\n//component for bot response textbubble\n\n// css for replies style tag\nconst replystyle = {\n  width: 400,\n  padding: 10\n};\n\nclass BotBubble extends React.Component\n{\n    constructor(props) { // used to initialize local state. Not needed if state not being used.\n        super(props); // needs to be called or else this.props will be undefined\n        //initializing objects with their initial state\n        this.state = { //assigns objects to this.state\n                    };\n    }\n\n   render() {\n    return (\n        <div> \n            <div id=\"bot\" className=\"d-flex grow\">\n                {/* bot icon from react-icons and bot text bubble */}\n                <div className=\"p-2\" style={{color:\"darkblue\"}}><SiProbot size={22} /></div>\n                <div className=\"bubble m-3 float-start\">\n                    <p style={replystyle}>{this.props.children}</p>\n                </div>\n            </div>\n        </div>\n    );\n    }\n}\n\nexport default BotBubble;\n","import React from 'react';\n\n// component for loading dots in Delay component\nclass Loading extends React.Component\n{//when using state in React, need to set up constructor\n    constructor(props) { // used to initialize local state. Not needed if state not being used.\n        super(props); // needs to be called or else this.props will be undefined\n        //initializing objects with their initial state\n        this.state = { //assigns objects to this.state\n                      dot1 : true, //set initial state of dot1 to true\n                      dot2 : true  //set initial state of dot2 to true\n                    };\n    }\n\n    componentDidMount() {\n       setTimeout(() => { // setTimeoutimeout function used to create delay\n           this.setState({dot1: false}); //update state of dot1 to false\n       }, 500); //timeout set at 500\n   }\n\n   componentDidUpdate() {\n        setTimeout(() => { // setTimeoutimeout function used to create delay\n            this.setState({dot2: false}); //update state of dot2 to false\n        }, 700); //timeout set at 700\n    }\n\n   // If dot1 is true, render one dot. If dot1 is false (after timeout at 500), renders statement that if dot2 is true, render two dots\n   // If dot2 is false (after timeout at 700), render three dots\n   render() {\n       return this.state.dot1 ? <div className=\"dots\">.</div> : this.state.dot2 ? <div className=\"dots\">. .</div> : <div className=\"dots\">. . .</div>;\n   }\n}\n\nexport default Loading;\n","import React from 'react';\nimport BotBubble from './BotBubble';\nimport Loading from './Loading';\n\n//Delay component for bot responses with loading dots\nclass Delay extends React.Component\n{ //when using state in React, need to set up constructor\n    constructor(props) { // used to initialize local state. Not needed if state not being used.\n        super(props); // needs to be called or else this.props will be undefined\n        //initializing objects with their initial state\n        this.state = { //assigns objects to this.state\n                      hidden : true //set initial state of hidden to true\n                    };\n    }\n\n    componentDidMount() {\n       setTimeout(() => { // setTimeoutimeout function used to create delay\n           this.setState({hidden: false}); //update state of hidden to false\n       }, 1500); //timeout set at 1500\n   }\n\n   //if hidden is true renders bot bubble with loading dots from Loading component, if hidden is false renders children\n   render() {\n       return this.state.hidden ? <BotBubble><Loading></Loading></BotBubble> : this.props.children;\n   }\n}\n\nexport default Delay;\n","import React from 'react';\nimport '../styles/TextBubble.css';\nimport { FaRegUserCircle } from 'react-icons/fa';\n\n//component for user response textbubble\n\n// css for replies style tag\nconst replystyle = {\n  width: 400,\n  padding: 10\n};\n\nclass UserBubble extends React.Component\n{\n    constructor(props) { // used to initialize local state. Not needed if state not being used.\n        super(props); // needs to be called or else this.props will be undefined\n        //initializing objects with their initial state\n        this.state = { //assigns objects to this.state\n                    };\n    }\n\n   render() {\n    return (\n        <div>\n            <div id=\"user\">      \n                <div className=\"d-flex float-end grow\">   \n                    {/* user text bubble */}\n                    <div className=\"bubble m-3\">\n                        <p style={replystyle}>{this.props.children}</p>\n                    </div>\n                    {/* user icon from react-icons */}\n                    <div className=\"p-2\" style={{color:\"#00e2ff\"}}><FaRegUserCircle size={24} /></div>\n                </div>\n            </div>\n        </div>\n    );\n    }\n}\n\nexport default UserBubble;\n","import React from 'react';\nimport '../styles/Chatbox.css';\nimport DelayInput from './DelayInput';\nimport Delay from './Delay';\nimport UserBubble from './UserBubble';\nimport BotBubble from './BotBubble';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from '@material-ui/core/FormControl';\nimport { bot } from './bot';\n\n//component for chatbot\n\n//initialize i to 0 to use as index for bot response\nlet i = 0;\n\n//when using state in React, need to set up constructor\nclass Chatbox extends React.Component\n{\n  constructor(props) { // used to initialize local state. Not needed if state not being used.\n      super(props); // needs to be called or else this.props will be undefined\n      //initializing objects with their initial state\n      this.state = { //assigns objects to this.state\n        user: '', // set user input box to empty value\n        replies: [i===0 ? <Delay> {/* Delay component used to hide response until set time runs out. Then shows child prop */}\n          <BotBubble>{/* BotBubble component displays JSX elements around child prop */}\n              Hello, I'm SolutionBot. I'm here to help you find a solution to your problem using Solution Focused Brief Therapy. Before we begin, can I have your name please?\n          </BotBubble></Delay> : ''],\n        i: 0 // set initial state of i to 0 so that its state can be updated later\n      };\n  }\n\n  // handles event listener for onChange, when user types input\n  handleChange= (e) => { // by using arrow functions, no need to bind methods\n    //setState used to update the initial state of the object\n    //when input typed, sets state of user object as the current input value from the event. e = event.\n    this.setState({user: e.target.value});\n  }\n\n  //handles event listener for onSubmit, when user submits form\n  handleClick= (e) => {\n      //preventDefault method is called on the event to prevent a browser reload or refresh when the form is submitted\n      e.preventDefault();\n      //if user input is not empty when submitted\n      if (this.state.user !== \"\") {\n        //if index i is less than length of response list\n        if (i < bot.length) {\n          //update state of objects and variables\n          this.setState(\n            {\n              // set user to an empty string to reset value in input box to empty after submit\n              user: '',\n              //replies array copies styled and formatted user input and bot responses in jsx tags and css to be rendered\n              replies: [...this.state.replies, <UserBubble>{this.state.user}</UserBubble>,\n              <Delay><BotBubble>{i===0 ? this.state.user : ''}{bot[i].response}</BotBubble></Delay>],\n              // increment value of i for index of bot response\n              i: i+=1\n            }\n          );\n        //if i reaches length of response list, reload page to start over\n        } else {\n            window.location.reload();\n        }\n      }\n  }\n\n  //function to automatically scroll into view of referenced element at bottom of responses\n  autoScroll = () => {\n  this.bottomResponse.scrollIntoView({ behavior: \"smooth\" });\n  }\n  \n  //react lifecycle method. If componenet did update use autoScroll function\n  componentDidUpdate() {\n  this.autoScroll();\n  }\n\n  //react lifecycle method. If component unmounts, set i=0 to reset chat.\n  componentWillUnmount() {\n    i=0;\n  }\n\n  render()\n  { // Render method displays HTML to the UI by returning JSX code to the root element. Can read props and state.\n    // JSX (JavaScript XML) is used to write HTML within the JavaScript code in React, using JavaScript. It is a syntax extension of JavaScript.\n    // Comments for jsx written within {/*  */}\n    return(\n      <div>\n        <center>\n          {/* container for the user and bot messages */}\n          {/* must use className instead of class in JSX because class is a reserved word in JavaScript */}\n          <div id=\"chatbox\" className=\"row p-5 m-5 mt-3 d-flex justify-content-center\">                        \n              {/* prints the array of responses*/}\n              {this.state.replies}\n              {/* empty space */}\n              <p id=\"third\"></p>\n              <div className=\"p-4\">\n                {/* reference element that is scrolled into view with autoScroll function */}\n                <div id=\"fourth\" ref={(el) => { this.bottomResponse = el; }}></div>\n              </div>\n          </div>\n        </center>\n\n        {/* form container */}\n        <div className=\"textfield d-flex justify-content-center\">\n          <Form className=\"App\" onSubmit={this.handleClick}> {/* event listener to handle form submission */}\n            {(() => {\n              switch (i) { // Switch statement to switch between input types (text or button options) based on bot response index\n                case 1:\n                    return (\n                      <div className=\"d-grid gap-2\">\n                      <DelayInput>\n                        <FormControl component=\"fieldset\">\n                          <div className=\"btn p-3\">\n                            <input className=\"opbutton p-3 m-3\" value=\"relationship\" onClick={this.handleChange} type=\"submit\"/>\n                            <input className=\"opbutton p-3 m-3\" value=\"family\" onClick={this.handleChange} type=\"submit\"/>\n                            <input className=\"opbutton p-3 m-3\" value=\"mental health\" onClick={this.handleChange} type=\"submit\"/>\n                            <input className=\"opbutton p-3 m-3\" value=\"acedemic\" onClick={this.handleChange} type=\"submit\"/>\n                            <input className=\"opbutton p-3 m-3\" value=\"work\" onClick={this.handleChange} type=\"submit\"/>\n                            <input className=\"opbutton p-3 m-3\" value=\"legal\" onClick={this.handleChange} type=\"submit\"/>\n                            <input className=\"opbutton p-3 m-3\" value=\"personal\" onClick={this.handleChange} type=\"submit\"/>\n                            <input className=\"opbutton p-3 m-3\" value=\"other\" onClick={this.handleChange} type=\"submit\"/>\n                          </div>\n                        </FormControl>\n                      </DelayInput>\n                      </div>\n                    )\n                case 3:\n                    return (\n                      <div className=\"d-grid gap-2\">\n                      <DelayInput>\n                        <FormControl component=\"fieldset\">\n                          <div className=\"btn p-3\">\n                            <input className=\"opbutton p-3 m-3\" value=\"always\" onClick={this.handleChange} type=\"submit\"/>\n                            <input className=\"opbutton p-3 m-3\" value=\"frequently\" onClick={this.handleChange} type=\"submit\"/>\n                            <input className=\"opbutton p-3 m-3\" value=\"sometimes\" onClick={this.handleChange} type=\"submit\"/>\n                            <input className=\"opbutton p-3 m-3\" value=\"occassionally\" onClick={this.handleChange} type=\"submit\"/>\n                            <input className=\"opbutton p-3 m-3\" value=\"rarely\" onClick={this.handleChange} type=\"submit\"/>\n                          </div>\n                        </FormControl>\n                      </DelayInput>\n                      </div>\n                    )\n                  case 4:\n                    return (\n                      <div className=\"d-grid gap-2\">\n                      <DelayInput>\n                        <FormControl component=\"fieldset\">\n                          <div className=\"btn p-3\">\n                            <input className=\"opbutton p-3 m-3\" value=\"a few days\" onClick={this.handleChange} type=\"submit\"/>\n                            <input className=\"opbutton p-3 m-3\" value=\"weeks\" onClick={this.handleChange} type=\"submit\"/>\n                            <input className=\"opbutton p-3 m-3\" value=\"months\" onClick={this.handleChange} type=\"submit\"/>\n                            <input className=\"opbutton p-3 m-3\" value=\"a year\" onClick={this.handleChange} type=\"submit\"/>\n                            <input className=\"opbutton p-3 m-3\" value=\"more than a year\" onClick={this.handleChange} type=\"submit\"/>\n                          </div>\n                        </FormControl>\n                      </DelayInput>\n                      </div>\n                    )\n                    case 10:\n                      return (\n                        <div className=\"d-grid gap-2\">\n                        <DelayInput>\n                          <FormControl component=\"fieldset\">\n                            <div className=\"btn p-3\">\n                              <input className=\"opbutton p-3 m-3\" value=\"better\" onClick={this.handleChange} type=\"submit\"/>\n                              <input className=\"opbutton p-3 m-3\" value=\"worse\" onClick={this.handleChange} type=\"submit\"/>\n                            </div>\n                          </FormControl>\n                        </DelayInput>\n                        </div>\n                      )\n                      case 14:\n                        return (\n                          <div className=\"d-grid gap-2\">\n                            <DelayInput>\n                            <FormControl component=\"fieldset\">\n                              <div className=\"btn p-3\">\n                                <input className=\"opbutton p-3 m-3\" value=\"yes\" onClick={this.handleChange} type=\"submit\"/>\n                                <input className=\"opbutton p-3 m-3\" value=\"no\" onClick={this.handleChange} type=\"submit\"/>\n                              </div>\n                            </FormControl>\n                            </DelayInput>\n                          </div>\n                        )\n                      case 16:\n                        return (\n                          <div className=\"d-grid gap-2\">\n                            <DelayInput>\n                            <FormControl component=\"fieldset\">\n                              <div className=\"btn p-3\">\n                                <input className=\"opbutton p-3 m-3\" value=\"yes\" onClick={this.handleChange} type=\"submit\"/>\n                                <input className=\"opbutton p-3 m-3\" value=\"no\" onClick={this.handleChange} type=\"submit\"/>\n                              </div>\n                            </FormControl>\n                            </DelayInput>\n                          </div>\n                        )\n                      case 17:\n                        return (\n                          <div className=\"d-grid gap-2\">\n                          <DelayInput>\n                            <FormControl component=\"fieldset\">\n                              <div className=\"btn p-3\">\n                                <input className=\"opbutton p-3 m-3\" value=\"0\" onClick={this.handleChange} type=\"submit\"/>\n                                <input className=\"opbutton p-3 m-3\" value=\"1\" onClick={this.handleChange} type=\"submit\"/>\n                                <input className=\"opbutton p-3 m-3\" value=\"2\" onClick={this.handleChange} type=\"submit\"/>\n                                <input className=\"opbutton p-3 m-3\" value=\"3\" onClick={this.handleChange} type=\"submit\"/>\n                                <input className=\"opbutton p-3 m-3\" value=\"4\" onClick={this.handleChange} type=\"submit\"/>\n                                <input className=\"opbutton p-3 m-3\" value=\"5\" onClick={this.handleChange} type=\"submit\"/>\n                                <input className=\"opbutton p-3 m-3\" value=\"6\" onClick={this.handleChange} type=\"submit\"/>\n                                <input className=\"opbutton p-3 m-3\" value=\"7\" onClick={this.handleChange} type=\"submit\"/>\n                                <input className=\"opbutton p-3 m-3\" value=\"8\" onClick={this.handleChange} type=\"submit\"/>\n                                <input className=\"opbutton p-3 m-3\" value=\"9\" onClick={this.handleChange} type=\"submit\"/>\n                                <input className=\"opbutton p-3 m-3\" value=\"10\" onClick={this.handleChange} type=\"submit\"/>\n                              </div>\n                            </FormControl>\n                            </DelayInput>\n                          </div>\n                        )\n                      case 18:\n                        return (\n                          <div className=\"d-grid gap-2\">\n                            <DelayInput>\n                            <FormControl component=\"fieldset\">\n                              <div className=\"btn p-3\">\n                                <input className=\"opbutton p-3 m-3\" value=\"1\" onClick={this.handleChange} type=\"submit\"/>\n                                <input className=\"opbutton p-3 m-3\" value=\"2\" onClick={this.handleChange} type=\"submit\"/>\n                                <input className=\"opbutton p-3 m-3\" value=\"3\" onClick={this.handleChange} type=\"submit\"/>\n                                <input className=\"opbutton p-3 m-3\" value=\"4\" onClick={this.handleChange} type=\"submit\"/>\n                                <input className=\"opbutton p-3 m-3\" value=\"5\" onClick={this.handleChange} type=\"submit\"/>\n                                <input className=\"opbutton p-3 m-3\" value=\"6\" onClick={this.handleChange} type=\"submit\"/>\n                                <input className=\"opbutton p-3 m-3\" value=\"7\" onClick={this.handleChange} type=\"submit\"/>\n                                <input className=\"opbutton p-3 m-3\" value=\"8\" onClick={this.handleChange} type=\"submit\"/>\n                                <input className=\"opbutton p-3 m-3\" value=\"9\" onClick={this.handleChange} type=\"submit\"/>\n                              </div>\n                            </FormControl>\n                            </DelayInput>\n                          </div>\n                        )\n                      case 30:\n                        return (\n                          <div className=\"d-grid gap-2\">\n                            <DelayInput>\n                            <FormControl component=\"fieldset\">\n                              <div className=\"btn p-3\">\n                                <input className=\"opbutton p-3 m-3\" value=\"a lot\" onClick={this.handleChange} type=\"submit\"/>\n                                <input className=\"opbutton p-3 m-3\" value=\"a little\" onClick={this.handleChange} type=\"submit\"/>\n                                <input className=\"opbutton p-3 m-3\" value=\"none\" onClick={this.handleChange} type=\"submit\"/>\n                              </div>\n                            </FormControl>\n                            </DelayInput>\n                          </div>\n                        )\n                default:\n                    return (\n                      <div><div className=\"d-grid gap-2\"><Form.Control size=\"lg\" type=\"text\" placeholder=\"Enter reply\" value={this.state.user} onChange={this.handleChange} style={{width: 700}} />\n                      <input className=\"opbutton\" type=\"submit\"/></div></div>\n                    )\n              }\n            })()}\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Chatbox;\n","import React from 'react';\nimport '../styles/About.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n//component for About content\n\nfunction About() \n{\n  return (\n    <div>\n        <center>\n            <div id=\"infobox\" className=\"p-5 m-5 mt-3 justify-content-center\">\n                <div className=\"grow\">\n                    <h1>About:</h1>\n                    <h5>SolutionBot is a therapeutic chatbot that uses Solution Focused Brief Therapy (SFBT) to help you identify solutions or skills you already have to reduce stressors and make changes for a better future.</h5>\n                    <p></p>\n                    <h5>SFBT is a brief therapy that can used in a single session.</h5>\n                    <p></p>\n                    <h5>SFBT does not focus on past traumas or the problem itself but on the present and your preferred future.</h5>\n                    <p></p>\n                    <h5>SFBT can be applied to most age groups and a variety of issues, including but not limited to relationship problems, some behavioral issues and mental health disorders, academic issues, and achieving goals.</h5>\n                </div>\n                <div className=\"grow\">\n                    <h1>Disclaimer:</h1>\n                    <h5>SolutionBot is not intended to treat or diagnose mental health disorders or any clinical disorder.</h5>\n                    <p></p>\n                    <h5>If you have a serious mental illness, are experiencing severe symptoms, or if this is an emergency, please seek professional help immediately.</h5>\n                </div>\n                <div className=\"grow\">\n                    <h1>Confidentiality and Privacy Statement:</h1>\n                    <h5>All information you share will be kept confidential. Information you share will not be saved and will be permanently deleted upon termination of the therapy session.</h5>\n                </div>\n            </div>\n        </center>\n    </div>\n  );\n}\n\n\n\nexport default About;\n","import React from 'react';\nimport './bot';\nimport Navigation from './Navigation';\nimport Chatbox from './Chatbox';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport About from './About';\n\n//when using state in React, need to set up constructor\nclass App extends React.Component\n{\n    constructor(props) { // used to initialize local state. Not needed if state not being used.\n        super(props); // needs to be called or else this.props will be undefined\n        //initializing objects with their initial state\n        this.state = { //assigns objects to this.state\n            data: null\n        };\n    }\n\n    componentDidMount() {\n    // Call fetch function when component mounts\n        this.callBackendAPI()\n            .then(res => this.setState({ data: res.message }))\n            .catch(err => console.log(err));\n    }\n    // Fetch GET route from the Express server\n    callBackendAPI = async () => {\n        const response = await fetch('/');\n        const body = await response.json();\n\n        if (response.status !== 200) {\n            throw Error(body.message)\n        }\n        return body;\n    };\n\n\n  render()\n  { // render method displays HTML to the UI by returning JSX code to the root element. Can read props and state.\n    // Returns JSX code\n    //JSX (JavaScript XML) is used to write HTML within the JavaScript code in React, using JavaScript. It is a syntax extension of JavaScript.\n    // comments for jsx written within {/*  */}\n    return(\n      <div> {/* render must be followed with div tag. */}\n          <Router>\n          {/* switch must be within router. React router used to route and switch between components through nav links in navigation component */}\n              <Navigation /> {/* navigation bar component with links to component paths */}\n                <Switch> {/* switches paths for components using react router */}\n                    <Route exact path=\"/\"> {/* routes to path closest to the indicated path */}\n                        <Chatbox />\n                    </Route>\n                    <Route exact path=\"/About\"> {/* must put exact or else will route to closest path \"/\" */}\n                        <About />\n                    </Route>\n                </Switch>\n          </Router>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './components/App';\nimport 'tachyons';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}